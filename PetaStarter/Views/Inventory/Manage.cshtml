@model InventoryTransaction

@{
    ViewBag.Title = $"Manage {ViewBag.IteName} at {ViewBag.LocationName}";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemId)
        @if (Model?.InventoryTransactionId> 0)
        {
            @Html.HiddenFor(model => model.InventoryTransactionId)
            @Html.HiddenFor(model => model.ToLocationId)
            @Html.HiddenFor(model => model.TDate)
            @Html.HiddenFor(model => model.RecvdByUserId)
            @Html.Hidden("ItemTypeId", (int)ViewBag.ite)
        }
        else
        {
            @Html.Hidden("ToLocationId", (int)ViewBag.lid)            
            @Html.Hidden("ItemTypeId", (int)ViewBag.ite)
        }
        <div class="form-group">
            @Html.Label("Item Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                    <input type="text" id="ItemName" name="ItemName" style="color:black;" data-autocomplete-idholder="#ItemId" value="@ViewBag.ItemName" data-autocombo-url="@Url.Action("AutoCompleteItems", new { ite=(int)ViewBag.ite})" class="form-control" />
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.QtyAdded, "Quantity Recieved", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtyAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QtyAdded, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.UnitId, "Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UnitId, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>    
        @Html.ActionLink("Back to List", "Receipt", new { Ite = ViewBag.ite, LocationId =ViewBag.lid })        
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
