@model CardTransaction

@{
    ViewBag.Title = "Manage";
}

<h2>Recharge Card</h2>

@if (ViewBag.preissu!=null)
{
    <div class="MastDet">
        <h2>This card is already issued:</h2>
        @($"Previous issue details: Issued on {ViewBag.preissu.IssuedOn:dd-MMM-yyyy} to {ViewBag.preissu.ToPerson}")
    </div>
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>You are about to recharge the card issued to @ViewBag.IssuData.ToPerson on @ViewBag.IssuData.IssuedOn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CardIssueId)

        <div class="form-group">
            @Html.LabelFor(model => model.RechargeAmt, "Recharge Amt.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RechargeAmt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RechargeAmt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Payment Mode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PayMode", null, new { @class = "form-control" })                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Payment Details", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("PayDetails", new { htmlAttributes = new { @class = "form-control" } })                
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "LendingIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
