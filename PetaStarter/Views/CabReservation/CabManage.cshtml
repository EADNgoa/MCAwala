@model CabReservation

@{
    ViewBag.Title = "Manage";
}

<h2>Manage Reservation</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.GuestID)

    <div class="form-horizontal">
        <h4>Cab Reservation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model?.CabReservationID > 0)
        {
            @Html.HiddenFor(model => model.CabReservationID)
            <div class="form-group">
                @Html.Label("Guest Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @ViewBag.Guest

                </div>
            </div>
        }
        else
        {
        <div class="form-group">
            @Html.Label("Guest Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="GuestName" name="GuestName" style="color:black;" data-autocomplete-idholder="#GuestID" value="" data-autocombo-url="@Url.Action("AutoCompleteGuests")" class="form-control" />
            </div>
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.DriverID, "Driver Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DriverID, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DriverID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tdate, "Date and Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tdate, new { htmlAttributes = new {@type="datetime", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tdate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TFrom, "From", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TFrom, "", new { @class = "text-danger" })
            </div>
        </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.TTo, "To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TTo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReminderMinutes,"Reminder Minutes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReminderMinutes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReminderMinutes, "", new { @class = "text-danger" })
            </div>
        </div>
      
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
