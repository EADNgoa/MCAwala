@model OrderTicket

@using (Html.BeginForm("ManageSave", "Restaurant", FormMethod.Post, new { id = "OrderFm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LocationId)
    @Html.Hidden("WaiterId", (string)ViewBag.UID)
    @if (Model?.OTID > 0)
    {
        @Html.HiddenFor(model => model.OTID)
        @Html.HiddenFor(model => model.VoidedBy)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.TDateTime, "Order Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime" } })

            @Html.ValidationMessageFor(model => model.TableId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TableId, "Table No(s).", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TableId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TableId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoomNo, "Room No.", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoomNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RoomNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsVoid, "Void Order?", htmlAttributes: new { @class = "control-label col-md-2" })
        Be sure enter the reason for voiding the bill. Your user id will be auto recorded.
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsVoid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsVoid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VoidedReason, "Reason for Voiding", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VoidedReason, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VoidedReason, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<p>
    <a id="OrderList">Back to list</a>
    @if(Model?.OTID>0)
    {
        <a id="OrderDets">Details</a>
    }
</p>

<script>
    $("#OrderList").click(function (event) {

        $('#OrderPart').html("");
        $('#OrderPart').load('@Url.Action("OrderPart")', { LocationId: $("#LoID").val(), OrderDate: $("#OrderDate").val(), UID: $("#UID").val() } );

    });

     $("#OrderDets").click(function (event) {

        $('#OrderPart').html("");
        $('#OrderPart').load('@Url.Action("Details")', { id: @Model.OTID} );

    });

    $(function () {
        $('input[type=datetime]').datetimepicker({
            dateFormat: "yy-m-dd",
            timeFormat: "hh:mm tt",
            hourGrid: 4,
            minuteGrid: 10,
            stepMinute: 5
        });

        jQuery.validator.methods["date"] = function (value, element) { return true; }
    });

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
